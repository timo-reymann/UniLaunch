<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:UniLaunch.UI.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="https://github.com/projektanker/icons.avalonia"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:UniLaunch.UI.Controls"
        xmlns:converter="clr-namespace:UniLaunch.UI.Converter"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        MinWidth="700"
        Width="700"
        MinHeight="375"
        Height="450"
        mc:Ignorable="d"
        d:DesignWidth="600"
        d:DesignHeight="300"
        x:Class="UniLaunch.UI.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        ExtendClientAreaToDecorationsHint="True"
        CanResize="True"
        WindowStartupLocation="CenterScreen"
        Icon="avares://UniLaunch.UI/Assets/window-icon.ico"
        Closing="BeforeClose"
        Title="UniLaunch">

    <Design.DataContext>
        <vm:MainWindowViewModel />
    </Design.DataContext>

    <Grid PointerMoved="InputElement_OnPointerMoved"
          PointerPressed="InputElement_OnPointerPressed"
          PointerReleased="InputElement_OnPointerReleased">
        <Grid.RowDefinitions>
            <RowDefinition Height="20" />
            <RowDefinition Height="80" />
            <RowDefinition Height="50" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Rectangle Grid.Row="0"
                   Fill="{DynamicResource MenuBar.Background}" />

        <Grid Grid.Row="1"
              Background="{DynamicResource MenuBar.Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0"
                        Margin="10"
                        Orientation="Horizontal"
                        Spacing="10">
                <Image Source="avares://UniLaunch.UI/Assets/banner-logo.png"
                       Stretch="Uniform" />
                <TextBlock FontSize="37"
                           FontFamily="{StaticResource Syne}"
                           Text="UniLaunch"
                           VerticalAlignment="Center" />
            </StackPanel>
            <Menu Grid.Column="1" VerticalAlignment="Center"
                  HorizontalAlignment="Right"
                  Margin="0 0 20 0">
                <Menu.Styles>
                    <Style Selector="Menu>MenuItem">
                        <Setter Property="FontSize" Value="20" />
                    </Style>
                </Menu.Styles>
                <MenuItem ToolTip.ShowDelay="100"
                          ToolTip.Tip="You have unsaved changes">
                    <MenuItem.Header>
                        <Panel>
                            <i:Icon IsVisible="{Binding HasUnsavedChanges}"
                                    Foreground="{DynamicResource FileIcon.Unsaved.Color}"
                                    Value="fas fa-file">
                            </i:Icon>
                            <i:Icon IsVisible="{Binding !HasUnsavedChanges}"
                                    Value="fas fa-file">
                            </i:Icon>
                        </Panel>
                    </MenuItem.Header>
                    <MenuItem Header="Open ..."
                              i:MenuItem.Icon="fa-static fa-folder-open"
                              Command="{Binding OpenFile}" />
                    <MenuItem Header="Save"
                              Command="{Binding SaveFile}"
                              i:MenuItem.Icon="fa-static fa-save" />
                    <MenuItem Header="Save to ..."
                              Command="{Binding SaveFile}"
                              i:MenuItem.Icon="fa-static fa-file-export">
                        <MenuItem.CommandParameter>
                            <system:Boolean>True</system:Boolean>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                    <MenuItem Header="Close"
                              i:MenuItem.Icon="fa-static fa-xmark"
                              Command="{Binding Close}" />
                </MenuItem>
                <MenuItem Command="{Binding ShowSettings}">
                    <MenuItem.Header>
                        <i:Icon Value="fas fa-gear"></i:Icon>
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Command="{Binding ShowAbout}">
                    <MenuItem.Header>
                        <i:Icon Value="fas fa-info"></i:Icon>
                    </MenuItem.Header>
                </MenuItem>
            </Menu>
        </Grid>
        <StackPanel Grid.Row="2"
                    Background="{DynamicResource MenuBar.Tab.Background}">
            <TabStrip Grid.Row="1" 
                      Margin="5 0 0 0"
                      SelectedIndex="{Binding SelectedTab}"
                      HorizontalAlignment="Center">
                <TabStrip.Styles>
                    <Style Selector="WrapPanel>TextBlock">
                        <Setter Property="Padding" Value="10 0 5 0" />
                    </Style>
                </TabStrip.Styles>
                <controls:TabItemWithIcon Title="Targets"
                                          Icon="fa-solid fa-bullseye" />
                <controls:TabItemWithIcon Title="Rulesets"
                                          Icon="fa-solid fa-check-double" />
                <controls:TabItemWithIcon Title="Entries"
                                          Icon="fa-static fa-play" />
            </TabStrip>
        </StackPanel>
        <Grid x:Name="grid" 
              Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"
                                  MinWidth="200" />
                <ColumnDefinition Width="1" />
                <ColumnDefinition Width="*" 
                                  MinWidth="300" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0"
                        Background="{DynamicResource SidePanel.Background}"
                        HorizontalAlignment="Stretch">
                <Button HorizontalAlignment="Stretch"
                        IsVisible="{Binding !ButtonFlyoutVisible}"
                        HorizontalContentAlignment="Center"
                        Margin="0 0 0 5"
                        Command="{Binding AddItem}">
                    <i:Icon Value="fas fa-plus"></i:Icon>
                </Button>
                <Button HorizontalAlignment="Stretch"
                        Margin="0 0 0 5"
                        IsVisible="{Binding ButtonFlyoutVisible}"
                        HorizontalContentAlignment="Center">
                    <i:Icon Value="fas fa-plus"></i:Icon>
                    <Button.Flyout>
                        <MenuFlyout Placement="Bottom"
                                    ItemsSource="{Binding Engine.EnabledTargetTypes}"
                                    HorizontalOffset="0"
                                    ShowMode="Transient">
                            <MenuFlyout.ItemContainerTheme>
                                <ControlTheme TargetType="MenuItem" x:DataType="system:Type"
                                              BasedOn="{StaticResource {x:Type MenuItem}}">
                                    <Setter Property="Header"
                                            Value="{Binding Mode=OneWay,Converter={x:Static converter:TypeConverter.TargetType}}" />
                                    <Setter Property="Command"
                                            Value="{Binding $parent[Window].((vm:MainWindowViewModel)DataContext).AddItem}" />
                                    <Setter Property="CommandParameter" Value="{Binding }" />
                                </ControlTheme>
                            </MenuFlyout.ItemContainerTheme>

                        </MenuFlyout>
                    </Button.Flyout>
                </Button>
                <ListBox SelectedItem="{Binding SelectedItem}"
                         Height="{Binding ElementName=grid,Path=Bounds.Height,Converter={x:Static converter:TypeConverter.ListBoxHeightConverter}}"
                         VerticalAlignment="Stretch"
                         ItemsSource="{Binding Items}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <DockPanel VerticalAlignment="Center">
                                <Button
                                    Command="{Binding $parent[Window].((vm:MainWindowViewModel)DataContext).DeleteItem}"
                                    Background="DarkRed"
                                    VerticalAlignment="Center"
                                    Foreground="White"
                                    DockPanel.Dock="Right"
                                    CommandParameter="{Binding}">
                                    <Button.Styles>
                                        <Style Selector="Button:pointerover /template/ ContentPresenter">
                                            <Setter Property="Background" Value="Red"></Setter>
                                        </Style>
                                    </Button.Styles>
                                    <i:Icon Value="fas fa-trash" />
                                </Button>
                                <TextBlock Text="{Binding NameProperty}"
                                           VerticalAlignment="Center"
                                           Margin="0,0,10,0" />
                            </DockPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>
            <GridSplitter Grid.Column="1"
                          Background="{DynamicResource SidePanel.Background}"
                          ResizeDirection="Columns" />
            <DockPanel Grid.Column="2">
                <ContentControl
                    Margin="20"
                    Content="{Binding SelectedItem}" />
            </DockPanel>
        </Grid>
    </Grid>
</Window>